option_settings:
    aws:elasticbeanstalk:application:environment:
        DJANGO_SETTINGS_MODULE: app.settings

Resources:
    sslSecurityGroupIngress:
        Type: AWS::EC2::SecurityGroupIngress
        Properties:
            GroupId: {"Fn::GetAtt": ["AWSEBSecurityGroup", "GroupId"]}
            IpProtocol: tcp
            ToPort: 443
            FromPort: 443
            CidrIp: 0.0.0.0/0

files:
    "/etc/nginx/sites-available/proxy.conf":
        mode: "000644"
        owner: root
        group: root
        content: |
            map $http_upgrade $connection_upgrade {
                default        "upgrade";
                ""            "";
            }

            server {
                listen 80;
                return 301 https://$host$request_uri;
            }

            server {
                listen 443 default ssl;

                gzip on;
                gzip_comp_level 4;
                gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

                if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
                    set $year $1;
                    set $month $2;
                    set $day $3;
                    set $hour $4;
                }
                access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;

                ssl_certificate      /etc/letsencrypt/live/ebcert/face-detection-1.eu-west-1.elasticbeanstalk.com/fullchain.pem;
                ssl_certificate_key  /etc/letsencrypt/live/ebcert/face-detection-1.eu-west-1.elasticbeanstalk.com/privkey.pem;

                ssl_session_timeout  5m;
                ssl_protocols  TLSv1.1 TLSv1.2;
                ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
                ssl_prefer_server_ciphers   on;

                if ($ssl_protocol = "") {
                    rewrite ^ https://$host$request_uri;
                }

                location / {
                    uwsgi_pass docker;
                    include uwsgi_params;
                    client_max_body_size 4G;
                    proxy_set_header    Connection            $connection_upgrade;
                    proxy_set_header    Upgrade                $http_upgrade;
                    proxy_set_header    Host                $host;
                    proxy_set_header    X-Real-IP            $remote_addr;
                    proxy_set_header    X-Forwarded-For        $proxy_add_x_forwarded_for;
                }

                location /static {
                  alias /var/app/static;
                }
            }

packages:
    yum:
        epel-release: []

container_commands:
    10_installcertbot:
        command: "wget https://dl.eff.org/certbot-auto;chmod a+x certbot-auto"
    20_getcert:
        command: "sudo ./certbot-auto certonly --debug --non-interactive --email hello@sebastiaan.app --agree-tos --standalone --domains face-detection-1.eu-west-1.elasticbeanstalk.com,face-detect.sebastiaan.app --keep-until-expiring --pre-hook \"sudo service nginx stop\" --post-hook \"sudo service nginx start\""
    30_link:
        command: "ln -sf /etc/letsencrypt/live/${certdomain} /etc/letsencrypt/live/ebcert"
    40_config:
        command: 'rm -f /etc/nginx/sites-enabled/* && ln -s /etc/nginx/sites-available/proxy.conf /etc/nginx/sites-enabled/proxy.conf'
    50_restartnginx:
        command: "sudo service nginx restart"
